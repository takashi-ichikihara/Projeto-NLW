{"version":3,"sources":["assets/images/illustration.svg","assets/images/logo.svg","assets/images/google-icon.svg","services/firebase.ts","components/Button.tsx","contexts/AuthContext.tsx","hooks/useAuth.ts","pages/Home.tsx","pages/NewRoom.tsx","assets/images/copy.svg","components/RoomCode.tsx","pages/Room.tsx","App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","Button","props","className","AuthContext","createContext","AuthContextProvider","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","signInWithGoogle","children","useAuth","useContext","Home","history","useHistory","roomCode","setRoomCode","push","event","preventDefault","trim","ref","get","exists","alert","src","illustrationImg","alt","logoImg","onClick","googleIconImg","onSubmit","type","placeholder","onChange","target","NewRoom","newRoom","setNewRoom","roomRef","title","authorId","firebaseRoom","key","to","RoomCode","navigator","clipboard","writeText","code","copyImg","Room","params","useParams","newQuestion","setNewQuestion","questions","setQuestions","setTitle","roomId","question","content","author","isHighlighted","isAnswered","on","room","databaseRoom","val","firebaseQuestions","parsedQuestions","Object","entries","map","length","disabled","JSON","stringify","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f78f4a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/illustration.ae7276f0.svg\";","export default __webpack_public_path__ + \"static/media/logo.a88331cb.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.df15d8e5.svg\";","import firebase from 'firebase/app';\r\n\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\n\r\nexport { firebase, auth, database }","\r\nimport { ButtonHTMLAttributes } from 'react'\r\n\r\nimport '../styles/button.scss';\r\n\r\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\r\n\r\nexport function Button(props: ButtonProps) {\r\n  return (\r\n    <button className=\"button\" {...props } />\r\n  )\r\n} \r\n","import { createContext, ReactNode, useEffect, useState } from 'react';\r\nimport { auth,firebase } from '../services/firebase';\r\n\r\ntype User = {\r\n  id: string;\r\n  name: string;\r\n  avatar: string;\r\n}\r\n\r\ntype AuthContextType = {\r\n  user: User | undefined;\r\n  signInWithGoogle: () => Promise<void>;\r\n}\r\n\r\nexport const AuthContext = createContext({} as AuthContextType);\r\n\r\ntype AuthContextProviderProps = {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function AuthContextProvider(props: AuthContextProviderProps) {\r\n\r\n  const [user, setUser] = useState<User>();\r\n\r\n  useEffect(() => {\r\n   const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        const { displayName, photoURL, uid } = user\r\n\r\n        if (!displayName || !photoURL) {\r\n          throw new Error ('Missing information from Google Account.');\r\n        }\r\n        setUser ({\r\n          id: uid,\r\n          name: displayName,\r\n          avatar: photoURL\r\n        })\r\n      }\r\n    })\r\n    return () => {\r\n      unsubscribe ();\r\n    }\r\n  }, [])\r\n    \r\n\r\n  async function signInWithGoogle() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\n      const result = await  auth.signInWithPopup(provider);\r\n    \r\n      if (result.user) {\r\n          const { displayName, photoURL, uid } = result.user\r\n\r\n          if (!displayName || !photoURL) {\r\n            throw new Error ('Missing information from Google Account.');\r\n          }\r\n\r\n          setUser ({\r\n            id: uid,\r\n            name: displayName,\r\n            avatar: photoURL\r\n          })\r\n        }\r\n      }\r\n\r\n\r\n  return(\r\n      <AuthContext.Provider value={{ user, signInWithGoogle }}>\r\n        {props.children}\r\n      </AuthContext.Provider>\r\n  )\r\n}","import { useContext} from 'react';\r\nimport { AuthContext} from '../contexts/AuthContext';\r\n\r\nexport function useAuth() {\r\n  const value = useContext(AuthContext) \r\n\r\n  return value;\r\n}","import { useHistory } from 'react-router-dom';\r\nimport { FormEvent, useState } from 'react';\r\n\r\nimport illustrationImg from '../assets/images/illustration.svg';\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport googleIconImg from '../assets/images/google-icon.svg';\r\n\r\nimport { database } from '../services/firebase';\r\n\r\nimport { Button } from '../components/Button';\r\nimport {useAuth} from '../hooks/useAuth';\r\n\r\nimport '../styles/auth.scss';\r\n\r\n\r\n// webpack (snowpack, vite)\r\n\r\nexport function Home() {\r\n    const history = useHistory();\r\n    const { user, signInWithGoogle } = useAuth();\r\n    const [ roomCode, setRoomCode ] = useState('');\r\n   async function handleCreateRoom() {\r\n      if (!user) {\r\n        await signInWithGoogle()\r\n      }\r\n     history.push('/rooms/new');\r\n    }\r\n    \r\n    async function handleJoinRoom(event: FormEvent) {\r\n      event.preventDefault();\r\n\r\n      if (roomCode.trim() === \"\") {\r\n        return;\r\n      }\r\n\r\n      const roomRef = await database.ref(`rooms/${roomCode}`).get();\r\n\r\n      if (!roomRef.exists()) {\r\n        alert('Room does not exists.');\r\n        return;\r\n      }\r\n      history.push(`/rooms/${roomCode}`);\r\n    }\r\n  \r\n  return (\r\n    <div id=\"page-auth\">\r\n      <aside>\r\n      <img src={illustrationImg} alt=\"Ilustração simbolizando perguntas e respostas\" />\r\n      <strong> Crie salas de Q&amp;A ao-vivo</strong>\r\n      <p>Tire as dúvidas da sua audiência em tempo-real</p>\r\n      </aside>\r\n      <main>\r\n        <div className=\"main-content\">\r\n        <img src={logoImg} alt=\"Letmeask\" />\r\n        <button onClick={handleCreateRoom} className=\"create-room\">\r\n          <img src={googleIconImg} alt=\"Logo do Google\" />\r\n          Crie sua sala com o Google\r\n        </button>\r\n        <div className=\"separator\">ou entre em uma sala</div>\r\n        <form onSubmit={handleJoinRoom}>\r\n          <input\r\n          type=\"text\"\r\n          placeholder=\"Digite o código da sala\" \r\n          onChange={event => setRoomCode(event.target.value)}\r\n          value={roomCode}\r\n          />\r\n          <Button type=\"submit\">\r\n            Entrar na sala\r\n          </Button>\r\n        </form>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n}","\r\nimport { FormEvent, useState} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport illustrationImg from '../assets/images/illustration.svg';\r\nimport logoImg from '../assets/images/logo.svg';\r\n\r\nimport { Button } from '../components/Button';\r\nimport { database } from '../services/firebase';\r\nimport {useAuth} from '../hooks/useAuth';\r\n\r\nimport '../styles/auth.scss';\r\n// webpack (snowpack, vite)\r\n\r\nexport function NewRoom() {\r\n const { user } = useAuth();\r\n const history = useHistory();\r\n const [newRoom, setNewRoom] = useState('');\r\n\r\n  async function handleCreateRoom (event: FormEvent) {\r\n    event.preventDefault();\r\n\r\n    if (newRoom.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    const roomRef = database.ref('rooms');\r\n\r\n    const firebaseRoom = await roomRef.push({\r\n      title: newRoom,\r\n      authorId: user?.id,\r\n  })\r\n      history.push(`/rooms/${firebaseRoom.key}`)\r\n    \r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"page-auth\">\r\n      <aside>\r\n      <img src={illustrationImg} alt=\"Ilustração simbolizando perguntas e respostas\" />\r\n      <strong> Crie salas de Q&amp;A ao-vivo</strong>\r\n      <p>Tire as dúvidas da sua audiência em tempo-real</p>\r\n      </aside>\r\n      <main>\r\n        <div className=\"main-content\">\r\n        <img src={logoImg} alt=\"Letmeask\" />\r\n        <h3>Cria uma nova sala</h3>\r\n        <form onSubmit={handleCreateRoom} >\r\n          <input\r\n          type=\"text\"\r\n          placeholder=\"Nome da sala\" \r\n          onChange={event => setNewRoom(event.target.value)}\r\n          value={newRoom}\r\n          />\r\n          <Button type=\"submit\">\r\n            Criar sala\r\n          </Button>\r\n        </form>\r\n        <p> Quer entrar uma uma sala existente?<Link to=\"/\">clique aqui</Link></p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/copy.2f36f99e.svg\";","import copyImg from '../assets/images/copy.svg';\r\n\r\nimport '../styles/room-code.scss';\r\n\r\ntype RoomCodeProps = {\r\n  code: string;\r\n} \r\n\r\nexport function RoomCode(props: RoomCodeProps) {\r\n  function copyRoomCodeToClipboard() {\r\n    navigator.clipboard.writeText(props.code)\r\n  }\r\n\r\n  return (\r\n    <button className=\"room-code\" onClick={copyRoomCodeToClipboard}>\r\n      <div>\r\n        <img src={copyImg} alt=\"Copy room code\" />\r\n      </div>\r\n      <span>Sala #{props.code}</span>\r\n    </button>\r\n  )\r\n}","import { useEffect } from 'react';\r\nimport { FormEvent, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport logoImg from '../assets/images/logo.svg';\r\n\r\nimport { Button } from '../components/Button';\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { database } from '../services/firebase';\r\n\r\nimport '../styles/rooms.scss';\r\n\r\ntype FirebaseQuestions = Record<string, {\r\n  author: {\r\n    name: string;\r\n    avatar: string;\r\n  }\r\n  content: string;\r\n  isAnswered: boolean;\r\n  isHighlighted: boolean;\r\n}>\r\n\r\ntype Question = {\r\n  id: string;\r\n  author: {\r\n    name: string;\r\n    avatar: string;\r\n  }\r\n  content: string;\r\n  isAnswered: boolean;\r\n  isHighlighted: boolean;\r\n}\r\n\r\ntype RoomParams = {\r\n  id: string;\r\n}\r\n\r\nexport function Room() {\r\n  const { user } = useAuth();\r\n  const params = useParams<RoomParams>();\r\n  const [newQuestion, setNewQuestion] = useState('');\r\n  const [questions, setQuestions] = useState<Question[]>([])\r\n  const [title, setTitle] = useState('');\r\n\r\n  const roomId = params.id;\r\n\r\n  useEffect(() => {\r\n    const roomRef = database.ref(`rooms/${roomId}`);\r\n\r\n    roomRef.on('value', room => {\r\n      const databaseRoom = room.val();\r\n      const firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {};\r\n\r\n      const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\r\n        return {\r\n          id: key,\r\n          content: value.content,\r\n          author: value.author,\r\n          isHighlighted: value.isHighlighted,\r\n          isAnswered: value.isAnswered,\r\n        }\r\n      })\r\n\r\n      setTitle(databaseRoom.title);\r\n      setQuestions(parsedQuestions);\r\n    })\r\n  }, [roomId]);\r\n\r\n  async function handleSendQuestion(event: FormEvent) {\r\n    event.preventDefault();\r\n\r\n    if (newQuestion.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    if (!user) {\r\n      throw new Error('You must be logged in');\r\n    }\r\n\r\n    const question = {\r\n      content: newQuestion,\r\n      author: {\r\n        name: user.name,\r\n        avatar: user.avatar,\r\n      },\r\n      isHighlighted: false,\r\n      isAnswered: false\r\n    };\r\n\r\n    await database.ref(`rooms/${roomId}/questions`).push(question);\r\n\r\n    setNewQuestion('');\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-room\">\r\n      <header>\r\n        <div className=\"content\">\r\n          <img src={logoImg} alt=\"Letmeask\" />\r\n          <RoomCode code={roomId} />\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"room-title\">\r\n          <h1>Sala {title}</h1>\r\n          { questions.length > 0 && <span>{questions.length} pergunta(s)</span> }\r\n        </div>\r\n\r\n        <form onSubmit={handleSendQuestion}>\r\n          <textarea\r\n            placeholder=\"O que você quer perguntar?\"\r\n            onChange={event => setNewQuestion(event.target.value)}\r\n            value={newQuestion}\r\n          />\r\n\r\n          <div className=\"form-footer\">\r\n            { user ? (\r\n              <div className=\"user-info\">\r\n                <img src={user.avatar} alt={user.name} />\r\n                <span>{user.name}</span>\r\n              </div>\r\n            ) : (\r\n              <span>Para enviar uma pergunta, <button>faça seu login</button>.</span>\r\n            ) }\r\n            <Button type=\"submit\" disabled={!user}>Enviar pergunta</Button>\r\n          </div>\r\n        </form>\r\n\r\n        {JSON.stringify(questions)}\r\n      </main>\r\n    </div>\r\n  );\r\n}","import { createContext, useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { Home } from './pages/Home';\nimport { NewRoom } from './pages/NewRoom';\nimport { Room } from './pages/Room';\nimport { auth, firebase } from './services/firebase';\n\nimport { AuthContext, AuthContextProvider } from './contexts/AuthContext'\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n    <AuthContextProvider>\n      <Switch>\n    <Route path=\"/\" exact component={Home} />\n    <Route path=\"/rooms/new\" component={NewRoom} />\n    <Route path=\"/rooms/:id\" component={Room} />\n    </Switch>\n    </AuthContextProvider>\n    </BrowserRouter>\n   \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './services/firebase';\n\nimport './styles/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}